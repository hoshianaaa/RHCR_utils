import cv2
import numpy as np

# マップのサイズ設定
height = 5
width = 15

# 各エージェントの移動履歴（ここではエージェント1の履歴のみ実際のデータを使用し、残りはダミーデータ）
states_agent1 = "27,3,0;27,2,1;26,2,2;25,2,3;24,2,4;24,3,5;24,0,6;25,0,7;26,0,8;26,3,9;41,3,10;56,3,11;56,2,12;55,2,13;54,2,14;53,2,15;52,2,16;51,2,17;50,2,18;49,2,19;48,2,20;48,1,21;33,1,22;18,1,23;18,0,24;19,0,25;20,0,26;21,0,27;21,1,28;21,2,29;20,2,30;19,2,31;19,3,32;19,0,33;20,0,34;21,0,35;21,1,36;6,1,37;6,2,38;5,2,39;4,2,40;4,3,41;19,3,42;19,2,43;18,2,44;18,3,45;33,3,46;48,3,47;48,0,48;49,0,49;50,0,50;51,0,51;52,0,52;53,0,53;54,0,54;54,1,55;54,2,56;53,2,57;52,2,58;51,2,59;50,2,60;49,2,61;48,2,62;48,1,63;33,1,64;18,1,65;18,0,66;19,0,67;20,0,68;20,1,69;20,2,70;19,2,71;18,2,72;18,3,73;33,3,74;48,3,75;48,0,76;49,0,77;50,0,78;51,0,79;52,0,80;52,3,81;67,3,82;67,2,83;66,2,84;65,2,85;64,2,86;63,2,87;63,1,88;48,1,89;33,1,90;18,1,91;18,0,92;19,0,93;20,0,94;21,0,95;22,0,96;23,0,97;24,0,98;25,0,99;26,0,100;"
states_agent2 = "43,2,0;42,2,1;41,2,2;41,1,3;26,1,4;11,1,5;11,2,6;10,2,7;9,2,8;8,2,9;7,2,10;6,2,11;5,2,12;5,3,13;20,3,14;20,0,15;21,0,16;22,0,17;23,0,18;24,0,19;25,0,20;26,0,21;26,3,22;41,3,23;56,3,24;56,2,25;55,2,26;54,2,27;53,2,28;52,2,29;51,2,30;50,2,31;49,2,32;48,2,33;48,1,34;33,1,35;18,1,36;18,0,37;19,0,38;20,0,39;21,0,40;22,0,41;23,0,42;24,0,43;24,1,44;9,1,45;9,2,46;8,2,47;7,2,48;6,2,49;6,3,50;21,3,51;21,0,52;22,0,53;23,0,54;24,0,55;25,0,56;26,0,57;26,3,58;41,3,59;56,3,60;71,3,61;71,2,62;70,2,63;70,1,64;55,1,65;55,0,66;56,0,67;56,1,68;41,1,69;26,1,70;11,1,71;11,2,72;10,2,73;9,2,74;9,3,75;24,3,76;24,2,77;23,2,78;22,2,79;21,2,80;20,2,81;19,2,82;18,2,83;18,3,84;33,3,85;48,3,86;48,0,87;49,0,88;50,0,89;51,0,90;51,1,91;51,2,92;50,2,93;49,2,94;48,2,95;47,2,96;47,1,97;32,1,98;17,1,99;17,0,100;"
states_agent3 = "57,1,0;57,1,1;42,1,2;27,1,3;12,1,4;12,2,5;12,2,6;11,2,7;10,2,8;9,2,9;8,2,10;7,2,11;7,3,12;22,3,13;22,0,14;22,1,15;7,1,16;7,2,17;6,2,18;6,3,19;21,3,20;21,0,21;22,0,22;23,0,23;24,0,24;25,0,25;26,0,26;26,3,27;41,3,28;56,3,29;71,3,30;71,2,31;70,2,32;70,1,33;55,1,34;55,0,35;56,0,36;56,1,37;41,1,38;26,1,39;11,1,40;11,2,41;10,2,42;9,2,43;8,2,44;7,2,45;7,3,46;22,3,47;22,0,48;23,0,49;24,0,50;25,0,51;26,0,52;26,3,53;41,3,54;56,3,55;71,3,56;71,2,57;70,2,58;69,2,59;69,1,60;54,1,61;54,0,62;55,0,63;56,0,64;56,1,65;41,1,66;26,1,67;11,1,68;11,2,69;10,2,70;9,2,71;9,3,72;24,3,73;24,0,74;25,0,75;26,0,76;26,3,77;41,3,78;56,3,79;71,3,80;71,2,81;70,2,82;69,2,83;69,1,84;54,1,85;54,2,86;53,2,87;52,2,88;52,3,89;67,3,90;67,2,91;66,2,92;65,2,93;64,2,94;63,2,95;63,1,96;48,1,97;33,1,98;18,1,99;18,0,100;"

# 各エージェントの状態をリストとしてパース
parsed_states_agent1 = [tuple(map(int, state.split(','))) for state in states_agent1.split(';') if state]
parsed_states_agent2 = [tuple(map(int, state.split(','))) for state in states_agent2.split(';') if state]
parsed_states_agent3 = [tuple(map(int, state.split(','))) for state in states_agent3.split(';') if state]

# 画像を保存するためのフォルダを指定
output_folder = "out1/"

# 最大のステップ数を決定（全エージェントの中で最も長い移動履歴を持つもの）
max_steps = max(len(parsed_states_agent1), len(parsed_states_agent2), len(parsed_states_agent3))

for idx in range(max_steps):
    # 画像を作成 (白背景)
    image = np.ones((height * 100, width * 100, 3), dtype=np.uint8) * 255

    # 各エージェントの状態を更新して描画
    for agent_id, (parsed_states, color) in enumerate(zip([parsed_states_agent1, parsed_states_agent2, parsed_states_agent3], [(0, 0, 255), (0, 255, 0), (255, 0, 0)])):
        if idx < len(parsed_states):
            position, direction, _ = parsed_states[idx]
            y = position // width
            x = position % width
            center = (x * 100 + 50, y * 100 + 50)
            cv2.circle(image, center, 40, color, -1)  # エージェントごとに異なる色

            # 向きに応じた矢印を描画
            arrow_end = {
                1: (center[0], center[1] - 50),
                0: (center[0] + 50, center[1]),
                3: (center[0], center[1] + 50),
                2: (center[0] - 50, center[1])
            }[direction]
            cv2.arrowedLine(image, center, arrow_end, (255, 255, 0), 5)

    # 画像を保存
    output_path = f"{output_folder}step_{idx:03d}.png"
    cv2.imwrite(output_path, image)

